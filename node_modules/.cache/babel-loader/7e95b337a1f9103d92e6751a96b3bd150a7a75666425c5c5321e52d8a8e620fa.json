{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MessageFormatter = void 0;\nconst utils_1 = require(\"../utils\");\nconst utils_2 = require(\"./utils\");\nclass MessageFormatter {}\nexports.MessageFormatter = MessageFormatter;\nMessageFormatter.makeRequest = (method, params) => {\n  const id = (0, utils_2.generateRequestId)();\n  return {\n    id,\n    method,\n    params,\n    env: {\n      sdkVersion: (0, utils_1.getSDKVersion)()\n    }\n  };\n};\nMessageFormatter.makeResponse = (id, data, version) => ({\n  id,\n  success: true,\n  version,\n  data\n});\nMessageFormatter.makeErrorResponse = (id, error, version) => ({\n  id,\n  success: false,\n  error,\n  version\n});","map":{"version":3,"names":["utils_1","require","utils_2","MessageFormatter","exports","makeRequest","method","params","id","generateRequestId","env","sdkVersion","getSDKVersion","makeResponse","data","version","success","makeErrorResponse","error"],"sources":["/home/oliver/Projects/SafeSwap/node_modules/@safe-global/safe-apps-sdk/src/communication/messageFormatter.ts"],"sourcesContent":["import { ErrorResponse, SDKRequestData, RequestId, SuccessResponse, MethodToResponse } from '../types';\nimport { getSDKVersion } from '../utils';\nimport { Methods } from './methods';\nimport { generateRequestId } from './utils';\n\nclass MessageFormatter {\n  static makeRequest = <M extends Methods = Methods, P = unknown>(method: M, params: P): SDKRequestData<M, P> => {\n    const id = generateRequestId();\n\n    return {\n      id,\n      method,\n      params,\n      env: {\n        sdkVersion: getSDKVersion(),\n      },\n    };\n  };\n\n  static makeResponse = (id: RequestId, data: MethodToResponse[Methods], version: string): SuccessResponse => ({\n    id,\n    success: true,\n    version,\n    data,\n  });\n\n  static makeErrorResponse = (id: RequestId, error: string, version: string): ErrorResponse => ({\n    id,\n    success: false,\n    error,\n    version,\n  });\n}\n\nexport { MessageFormatter };\n"],"mappings":";;;;;;AACA,MAAAA,OAAA,GAAAC,OAAA;AAEA,MAAAC,OAAA,GAAAD,OAAA;AAEA,MAAME,gBAAgB;AA6BbC,OAAA,CAAAD,gBAAA,GAAAA,gBAAA;AA5BAA,gBAAA,CAAAE,WAAW,GAAG,CAA2CC,MAAS,EAAEC,MAAS,KAA0B;EAC5G,MAAMC,EAAE,GAAG,IAAAN,OAAA,CAAAO,iBAAiB,GAAE;EAE9B,OAAO;IACLD,EAAE;IACFF,MAAM;IACNC,MAAM;IACNG,GAAG,EAAE;MACHC,UAAU,EAAE,IAAAX,OAAA,CAAAY,aAAa;;GAE5B;AACH,CAAC;AAEMT,gBAAA,CAAAU,YAAY,GAAG,CAACL,EAAa,EAAEM,IAA+B,EAAEC,OAAe,MAAuB;EAC3GP,EAAE;EACFQ,OAAO,EAAE,IAAI;EACbD,OAAO;EACPD;CACD,CAAC;AAEKX,gBAAA,CAAAc,iBAAiB,GAAG,CAACT,EAAa,EAAEU,KAAa,EAAEH,OAAe,MAAqB;EAC5FP,EAAE;EACFQ,OAAO,EAAE,KAAK;EACdE,KAAK;EACLH;CACD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"import{ethers}from'ethers';// Standard ERC20 ABI for balanceOf function\nconst erc20Abi=['function balanceOf(address owner) view returns (uint256)','function decimals() view returns (uint8)','function symbol() view returns (string)','function name() view returns (string)'];/**\n * Fetch token list from the OogaBooga API\n * For Berachain, uses the /v1/tokens endpoint\n */export const fetchTokenList=async function(){let apiKey=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;try{// If no API key is provided, return a minimal default list\nif(!apiKey){console.warn('No API key provided for token list, using default tokens');const defaultTokens=[{name:'Bera',symbol:'BERA',address:'0x0000000000000000000000000000000000000000',decimals:18,chainId:80085,// Berachain testnet\nlogoURI:'https://assets.coingecko.com/coins/images/26409/small/berachain-logo.png',isNative:true},{name:'Honey',symbol:'HONEY',address:'0x7EeCA4205fF31f947EdBd49195a7A88E6A91161B',decimals:18,chainId:80085,logoURI:'https://assets.coingecko.com/coins/images/28193/small/honey-icon.png'}];return{tokens:defaultTokens};}// Fetch tokens from OogaBooga API\nconst response=await fetch('https://api.oogabooga.com/v1/tokens',{method:'GET',headers:{'Content-Type':'application/json','Authorization':`Bearer ${apiKey}`}});if(!response.ok){throw new Error(`API error: ${response.status} ${await response.text()}`);}const data=await response.json();// Transform API response to our Token format\nconst tokens=data.map(token=>({name:token.name,symbol:token.symbol,address:token.address,decimals:token.decimals,chainId:80085,// Berachain testnet\nlogoURI:token.tokenURI||'',isNative:token.address==='0x0000000000000000000000000000000000000000'}));// Ensure native BERA token is included\nif(!tokens.find(t=>t.isNative)){tokens.unshift({name:'Bera',symbol:'BERA',address:'0x0000000000000000000000000000000000000000',decimals:18,chainId:80085,logoURI:'https://assets.coingecko.com/coins/images/26409/small/berachain-logo.png',isNative:true});}return{tokens};}catch(error){console.error('Error fetching token list:',error);throw new Error('Failed to fetch token list');}};/**\n * Fetch token balances for a given safe address\n */export const fetchTokenBalances=async(tokens,safeAddress,provider)=>{try{const tokensWithBalances=await Promise.all(tokens.map(async token=>{try{let balance='0';if(token.isNative){// For native token (BERA)\nbalance=ethers.formatEther(await provider.getBalance(safeAddress));}else{// For ERC20 tokens\nconst tokenContract=new ethers.Contract(token.address,erc20Abi,provider);const rawBalance=await tokenContract.balanceOf(safeAddress);balance=ethers.formatUnits(rawBalance,token.decimals);}return{...token,balance};}catch(error){console.error(`Error fetching balance for token ${token.symbol}:`,error);return{...token,balance:'0'};}}));return tokensWithBalances;}catch(error){console.error('Error fetching token balances:',error);throw new Error('Failed to fetch token balances');}};/**\n * Fetch token prices from the OogaBooga API\n */export const fetchTokenPrices=async function(tokens){let apiKey=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;try{// If no API key is provided, return tokens with placeholder prices\nif(!apiKey){console.warn('No API key provided for price fetch, using placeholder prices');return tokens.map(token=>({...token,priceUsd:token.symbol==='BERA'?10.5:token.symbol==='HONEY'?0.15:0}));}// Fetch prices from OogaBooga API\nconst response=await fetch('https://api.oogabooga.com/v1/prices',{method:'GET',headers:{'Content-Type':'application/json','Authorization':`Bearer ${apiKey}`}});if(!response.ok){throw new Error(`API error: ${response.status} ${await response.text()}`);}const priceData=await response.json();// Create a map of token addresses to prices\nconst priceMap=new Map();priceData.forEach(item=>{priceMap.set(item.address.toLowerCase(),item.price);});// Apply prices to tokens\nconst tokensWithPrices=tokens.map(token=>{const address=token.isNative?'0x0000000000000000000000000000000000000000':token.address.toLowerCase();return{...token,priceUsd:priceMap.has(address)?priceMap.get(address):token.priceUsd||0};});return tokensWithPrices;}catch(error){console.error('Error fetching token prices:',error);// Fall back to placeholder prices on error\nreturn tokens.map(token=>({...token,priceUsd:token.priceUsd||(token.symbol==='BERA'?10.5:token.symbol==='HONEY'?0.15:0)}));}};","map":{"version":3,"names":["ethers","erc20Abi","fetchTokenList","apiKey","arguments","length","undefined","console","warn","defaultTokens","name","symbol","address","decimals","chainId","logoURI","isNative","tokens","response","fetch","method","headers","ok","Error","status","text","data","json","map","token","tokenURI","find","t","unshift","error","fetchTokenBalances","safeAddress","provider","tokensWithBalances","Promise","all","balance","formatEther","getBalance","tokenContract","Contract","rawBalance","balanceOf","formatUnits","fetchTokenPrices","priceUsd","priceData","priceMap","Map","forEach","item","set","toLowerCase","price","tokensWithPrices","has","get"],"sources":["/home/oliver/Projects/SafeSwap/src/services/tokenService.ts"],"sourcesContent":["import { ethers } from 'ethers';\nimport { useSafeAppsSDK } from '@safe-global/safe-apps-react-sdk';\nimport { Token } from '../types';\n\n// Standard ERC20 ABI for balanceOf function\nconst erc20Abi = [\n  'function balanceOf(address owner) view returns (uint256)',\n  'function decimals() view returns (uint8)',\n  'function symbol() view returns (string)',\n  'function name() view returns (string)'\n];\n\n/**\n * Fetch token list from the OogaBooga API\n * For Berachain, uses the /v1/tokens endpoint\n */\nexport const fetchTokenList = async (apiKey: string | null = null): Promise<{ tokens: Token[] }> => {\n  try {\n    // If no API key is provided, return a minimal default list\n    if (!apiKey) {\n      console.warn('No API key provided for token list, using default tokens');\n      const defaultTokens: Token[] = [\n        {\n          name: 'Bera',\n          symbol: 'BERA',\n          address: '0x0000000000000000000000000000000000000000',\n          decimals: 18,\n          chainId: 80085, // Berachain testnet\n          logoURI: 'https://assets.coingecko.com/coins/images/26409/small/berachain-logo.png',\n          isNative: true\n        },\n        {\n          name: 'Honey',\n          symbol: 'HONEY',\n          address: '0x7EeCA4205fF31f947EdBd49195a7A88E6A91161B',\n          decimals: 18,\n          chainId: 80085,\n          logoURI: 'https://assets.coingecko.com/coins/images/28193/small/honey-icon.png'\n        }\n      ];\n      return { tokens: defaultTokens };\n    }\n    \n    // Fetch tokens from OogaBooga API\n    const response = await fetch('https://api.oogabooga.com/v1/tokens', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${apiKey}`\n      }\n    });\n    \n    if (!response.ok) {\n      throw new Error(`API error: ${response.status} ${await response.text()}`);\n    }\n    \n    const data = await response.json();\n    \n    // Transform API response to our Token format\n    const tokens: Token[] = data.map((token: any) => ({\n      name: token.name,\n      symbol: token.symbol,\n      address: token.address,\n      decimals: token.decimals,\n      chainId: 80085, // Berachain testnet\n      logoURI: token.tokenURI || '',\n      isNative: token.address === '0x0000000000000000000000000000000000000000'\n    }));\n    \n    // Ensure native BERA token is included\n    if (!tokens.find(t => t.isNative)) {\n      tokens.unshift({\n        name: 'Bera',\n        symbol: 'BERA',\n        address: '0x0000000000000000000000000000000000000000',\n        decimals: 18,\n        chainId: 80085,\n        logoURI: 'https://assets.coingecko.com/coins/images/26409/small/berachain-logo.png',\n        isNative: true\n      });\n    }\n\n    return { tokens };\n  } catch (error) {\n    console.error('Error fetching token list:', error);\n    throw new Error('Failed to fetch token list');\n  }\n};\n\n/**\n * Fetch token balances for a given safe address\n */\nexport const fetchTokenBalances = async (\n  tokens: Token[],\n  safeAddress: string,\n  provider: ethers.Provider\n): Promise<Token[]> => {\n  try {\n    const tokensWithBalances = await Promise.all(\n      tokens.map(async (token) => {\n        try {\n          let balance = '0';\n\n          if (token.isNative) {\n            // For native token (BERA)\n            balance = ethers.formatEther(await provider.getBalance(safeAddress));\n          } else {\n            // For ERC20 tokens\n            const tokenContract = new ethers.Contract(token.address, erc20Abi, provider);\n            const rawBalance = await tokenContract.balanceOf(safeAddress);\n            balance = ethers.formatUnits(rawBalance, token.decimals);\n          }\n\n          return {\n            ...token,\n            balance\n          };\n        } catch (error) {\n          console.error(`Error fetching balance for token ${token.symbol}:`, error);\n          return {\n            ...token,\n            balance: '0'\n          };\n        }\n      })\n    );\n\n    return tokensWithBalances;\n  } catch (error) {\n    console.error('Error fetching token balances:', error);\n    throw new Error('Failed to fetch token balances');\n  }\n};\n\n/**\n * Fetch token prices from the OogaBooga API\n */\nexport const fetchTokenPrices = async (\n  tokens: Token[],\n  apiKey: string | null = null\n): Promise<Token[]> => {\n  try {\n    // If no API key is provided, return tokens with placeholder prices\n    if (!apiKey) {\n      console.warn('No API key provided for price fetch, using placeholder prices');\n      return tokens.map(token => ({\n        ...token,\n        priceUsd: token.symbol === 'BERA' ? 10.5 : token.symbol === 'HONEY' ? 0.15 : 0\n      }));\n    }\n    \n    // Fetch prices from OogaBooga API\n    const response = await fetch('https://api.oogabooga.com/v1/prices', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${apiKey}`\n      }\n    });\n    \n    if (!response.ok) {\n      throw new Error(`API error: ${response.status} ${await response.text()}`);\n    }\n    \n    const priceData = await response.json();\n    \n    // Create a map of token addresses to prices\n    const priceMap = new Map<string, number>();\n    priceData.forEach((item: { address: string; price: number }) => {\n      priceMap.set(item.address.toLowerCase(), item.price);\n    });\n    \n    // Apply prices to tokens\n    const tokensWithPrices = tokens.map(token => {\n      const address = token.isNative ? '0x0000000000000000000000000000000000000000' : token.address.toLowerCase();\n      return {\n        ...token,\n        priceUsd: priceMap.has(address) ? priceMap.get(address) : token.priceUsd || 0\n      };\n    });\n\n    return tokensWithPrices;\n  } catch (error) {\n    console.error('Error fetching token prices:', error);\n    // Fall back to placeholder prices on error\n    return tokens.map(token => ({\n      ...token,\n      priceUsd: token.priceUsd || (token.symbol === 'BERA' ? 10.5 : token.symbol === 'HONEY' ? 0.15 : 0)\n    }));\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
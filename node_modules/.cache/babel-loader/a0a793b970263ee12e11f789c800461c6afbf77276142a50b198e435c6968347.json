{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSafeAppsSDK = exports.SafeProvider = void 0;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst react_1 = require(\"react\");\nconst safe_apps_sdk_1 = __importDefault(require(\"@safe-global/safe-apps-sdk\"));\nconst SafeContext = (0, react_1.createContext)(undefined);\nconst SafeProvider = _ref => {\n  let {\n    loader = null,\n    opts,\n    children\n  } = _ref;\n  const [sdk] = (0, react_1.useState)(() => new safe_apps_sdk_1.default(opts));\n  const [connected, setConnected] = (0, react_1.useState)(false);\n  const [safe, setSafe] = (0, react_1.useState)({\n    safeAddress: '',\n    chainId: 1,\n    threshold: 1,\n    owners: [],\n    isReadOnly: true\n  });\n  const contextValue = (0, react_1.useMemo)(() => ({\n    sdk,\n    connected,\n    safe\n  }), [sdk, connected, safe]);\n  (0, react_1.useEffect)(() => {\n    let active = true;\n    const fetchSafeInfo = async () => {\n      try {\n        const safeInfo = await sdk.safe.getInfo();\n        if (!active) {\n          return;\n        }\n        setSafe(safeInfo);\n        setConnected(true);\n      } catch (err) {\n        if (!active) {\n          return;\n        }\n        setConnected(false);\n      }\n    };\n    fetchSafeInfo();\n    return () => {\n      active = false;\n    };\n  }, [sdk]);\n  if (!connected && loader) {\n    return loader;\n  }\n  return (0, jsx_runtime_1.jsx)(SafeContext.Provider, Object.assign({\n    value: contextValue\n  }, {\n    children: children\n  }));\n};\nexports.SafeProvider = SafeProvider;\nconst useSafeAppsSDK = () => {\n  const value = (0, react_1.useContext)(SafeContext);\n  if (value === undefined) {\n    throw new Error('You probably forgot to put <SafeProvider>.');\n  }\n  return value;\n};\nexports.useSafeAppsSDK = useSafeAppsSDK;\nexports.default = exports.SafeProvider;","map":{"version":3,"names":["react_1","require","safe_apps_sdk_1","__importDefault","SafeContext","createContext","undefined","SafeProvider","_ref","loader","opts","children","sdk","useState","default","connected","setConnected","safe","setSafe","safeAddress","chainId","threshold","owners","isReadOnly","contextValue","useMemo","useEffect","active","fetchSafeInfo","safeInfo","getInfo","err","jsx_runtime_1","jsx","Provider","Object","assign","value","exports","useSafeAppsSDK","useContext","Error"],"sources":["/home/oliver/Projects/SafeSwap/node_modules/@safe-global/safe-apps-react-sdk/src/index.tsx"],"sourcesContent":["import { createContext, useState, useEffect, useContext, useMemo, ReactElement } from 'react';\nimport SafeAppsSDK, { Opts as SDKOpts, SafeInfo } from '@safe-global/safe-apps-sdk';\n\ntype SafeReactSDKContext = {\n  sdk: SafeAppsSDK;\n  connected: boolean;\n  safe: SafeInfo;\n};\n\nconst SafeContext = createContext<SafeReactSDKContext | undefined>(undefined);\n\ninterface Props {\n  loader?: ReactElement;\n  opts?: SDKOpts;\n  children: React.ReactNode;\n}\n\nexport const SafeProvider: React.FC<Props> = ({ loader = null, opts, children }) => {\n  const [sdk] = useState(() => new SafeAppsSDK(opts));\n  const [connected, setConnected] = useState(false);\n  const [safe, setSafe] = useState<SafeInfo>({\n    safeAddress: '',\n    chainId: 1,\n    threshold: 1,\n    owners: [],\n    isReadOnly: true,\n  });\n  const contextValue = useMemo(() => ({ sdk, connected, safe }), [sdk, connected, safe]);\n\n  useEffect(() => {\n    let active = true;\n    const fetchSafeInfo = async () => {\n      try {\n        const safeInfo = await sdk.safe.getInfo();\n\n        if (!active) {\n          return;\n        }\n        setSafe(safeInfo);\n        setConnected(true);\n      } catch (err) {\n        if (!active) {\n          return;\n        }\n        setConnected(false);\n      }\n    };\n\n    fetchSafeInfo();\n\n    return () => {\n      active = false;\n    };\n  }, [sdk]);\n\n  if (!connected && loader) {\n    return loader;\n  }\n\n  return <SafeContext.Provider value={contextValue}>{children}</SafeContext.Provider>;\n};\n\nexport const useSafeAppsSDK = (): SafeReactSDKContext => {\n  const value = useContext(SafeContext);\n\n  if (value === undefined) {\n    throw new Error('You probably forgot to put <SafeProvider>.');\n  }\n\n  return value;\n};\n\nexport default SafeProvider;\n"],"mappings":";;;;;;;;;;;;AAAA,MAAAA,OAAA,GAAAC,OAAA;AACA,MAAAC,eAAA,GAAAC,eAAA,CAAAF,OAAA;AAQA,MAAMG,WAAW,GAAG,IAAAJ,OAAA,CAAAK,aAAa,EAAkCC,SAAS,CAAC;AAQtE,MAAMC,YAAY,GAAoBC,IAAA,IAAsC;EAAA,IAArC;IAAEC,MAAM,GAAG,IAAI;IAAEC,IAAI;IAAEC;EAAQ,CAAE,GAAAH,IAAA;EAC7E,MAAM,CAACI,GAAG,CAAC,GAAG,IAAAZ,OAAA,CAAAa,QAAQ,EAAC,MAAM,IAAIX,eAAA,CAAAY,OAAW,CAACJ,IAAI,CAAC,CAAC;EACnD,MAAM,CAACK,SAAS,EAAEC,YAAY,CAAC,GAAG,IAAAhB,OAAA,CAAAa,QAAQ,EAAC,KAAK,CAAC;EACjD,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAG,IAAAlB,OAAA,CAAAa,QAAQ,EAAW;IACzCM,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE,CAAC;IACVC,SAAS,EAAE,CAAC;IACZC,MAAM,EAAE,EAAE;IACVC,UAAU,EAAE;GACb,CAAC;EACF,MAAMC,YAAY,GAAG,IAAAxB,OAAA,CAAAyB,OAAO,EAAC,OAAO;IAAEb,GAAG;IAAEG,SAAS;IAAEE;EAAI,CAAE,CAAC,EAAE,CAACL,GAAG,EAAEG,SAAS,EAAEE,IAAI,CAAC,CAAC;EAEtF,IAAAjB,OAAA,CAAA0B,SAAS,EAAC,MAAK;IACb,IAAIC,MAAM,GAAG,IAAI;IACjB,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAW;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjB,GAAG,CAACK,IAAI,CAACa,OAAO,EAAE;QAEzC,IAAI,CAACH,MAAM,EAAE;UACX;;QAEFT,OAAO,CAACW,QAAQ,CAAC;QACjBb,YAAY,CAAC,IAAI,CAAC;OACnB,CAAC,OAAOe,GAAG,EAAE;QACZ,IAAI,CAACJ,MAAM,EAAE;UACX;;QAEFX,YAAY,CAAC,KAAK,CAAC;;IAEvB,CAAC;IAEDY,aAAa,EAAE;IAEf,OAAO,MAAK;MACVD,MAAM,GAAG,KAAK;IAChB,CAAC;EACH,CAAC,EAAE,CAACf,GAAG,CAAC,CAAC;EAET,IAAI,CAACG,SAAS,IAAIN,MAAM,EAAE;IACxB,OAAOA,MAAM;;EAGf,OAAO,IAAAuB,aAAA,CAAAC,GAAA,EAAC7B,WAAW,CAAC8B,QAAQ,EAAAC,MAAA,CAAAC,MAAA;IAACC,KAAK,EAAEb;EAAY;IAAAb,QAAA,EAAGA;EAAQ,GAAwB;AACrF,CAAC;AA3CY2B,OAAA,CAAA/B,YAAY,GAAAA,YAAA;AA6ClB,MAAMgC,cAAc,GAAGA,CAAA,KAA0B;EACtD,MAAMF,KAAK,GAAG,IAAArC,OAAA,CAAAwC,UAAU,EAACpC,WAAW,CAAC;EAErC,IAAIiC,KAAK,KAAK/B,SAAS,EAAE;IACvB,MAAM,IAAImC,KAAK,CAAC,4CAA4C,CAAC;;EAG/D,OAAOJ,KAAK;AACd,CAAC;AARYC,OAAA,CAAAC,cAAc,GAAAA,cAAA;AAU3BD,OAAA,CAAAxB,OAAA,GAAewB,OAAA,CAAA/B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
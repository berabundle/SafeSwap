{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isObjectEIP712TypedData = void 0;\nconst isObjectEIP712TypedData = obj => {\n  return typeof obj === 'object' && obj != null && 'domain' in obj && 'types' in obj && 'message' in obj;\n};\nexports.isObjectEIP712TypedData = isObjectEIP712TypedData;","map":{"version":3,"names":["isObjectEIP712TypedData","obj","exports"],"sources":["/home/oliver/Projects/SafeSwap/node_modules/@safe-global/safe-apps-sdk/src/types/sdk.ts"],"sourcesContent":["import { ChainInfo as _ChainInfo } from '@safe-global/safe-gateway-typescript-sdk';\nimport { BigNumberish, BytesLike } from 'ethers';\n\nexport type ChainInfo = Pick<\n  _ChainInfo,\n  'chainName' | 'chainId' | 'shortName' | 'nativeCurrency' | 'blockExplorerUriTemplate'\n>;\n\nexport { NativeCurrency } from '@safe-global/safe-gateway-typescript-sdk';\n\nexport type BaseTransaction = {\n  to: string;\n  value: string;\n  data: string;\n};\n\nexport type GetTxBySafeTxHashParams = {\n  safeTxHash: string;\n};\n\nexport interface SendTransactionRequestParams {\n  safeTxGas?: number;\n}\n\nexport interface SendTransactionsParams {\n  txs: BaseTransaction[];\n  params?: SendTransactionRequestParams;\n}\n\nexport type GetBalanceParams = { currency?: string };\n\nexport type SignMessageParams = {\n  message: string;\n};\n\nexport interface TypedDataDomain {\n  name?: string;\n  version?: string;\n  chainId?: BigNumberish;\n  verifyingContract?: string;\n  salt?: BytesLike;\n}\n\nexport interface TypedDataTypes {\n  name: string;\n  type: string;\n}\n\nexport type TypedMessageTypes = { [key: string]: TypedDataTypes[] };\n\nexport type EIP712TypedData = {\n  domain: TypedDataDomain;\n  types: TypedMessageTypes;\n  message: Record<string, any>;\n};\n\nexport type SignTypedMessageParams = {\n  typedData: EIP712TypedData;\n};\n\nexport type SendTransactionsResponse = {\n  safeTxHash: string;\n};\n\nexport type SafeInfo = {\n  safeAddress: string;\n  chainId: number;\n  threshold: number;\n  owners: string[];\n  isReadOnly: boolean;\n};\n\nexport type EnvironmentInfo = {\n  origin: string;\n};\n\nexport type PostMessageOptions = {\n  transfer?: any[];\n};\n\nexport type AddressBookItem = {\n  address: string;\n  chainId: string;\n  name: string;\n};\n\nexport const isObjectEIP712TypedData = (obj?: unknown): obj is EIP712TypedData => {\n  return typeof obj === 'object' && obj != null && 'domain' in obj && 'types' in obj && 'message' in obj;\n};\n"],"mappings":";;;;;;AAsFO,MAAMA,uBAAuB,GAAIC,GAAa,IAA4B;EAC/E,OAAO,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,IAAI,IAAI,IAAI,QAAQ,IAAIA,GAAG,IAAI,OAAO,IAAIA,GAAG,IAAI,SAAS,IAAIA,GAAG;AACxG,CAAC;AAFYC,OAAA,CAAAF,uBAAuB,GAAAA,uBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
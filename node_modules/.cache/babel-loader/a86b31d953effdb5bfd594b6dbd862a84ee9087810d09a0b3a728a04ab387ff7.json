{"ast":null,"code":"/**\n * SafeSwap App - Main application component\n * \n * This is a Safe App that allows users to:\n * - Select multiple tokens from their Safe\n * - Bundle swaps into a single transaction\n * - Execute swaps through the Berabundle contract\n */import React,{useEffect,useState,useMemo,useCallback}from'react';import{ThemeProvider,createTheme}from'@mui/material/styles';import CssBaseline from'@mui/material/CssBaseline';import{Container,Box,Typography,CircularProgress}from'@mui/material';import{useSafeAppsSDK}from'@safe-global/safe-apps-react-sdk';import{SafeAppProvider}from'@safe-global/safe-apps-provider';import{ethers}from'ethers';import TokenSelector from'./components/TokenSelector';import SwapForm from'./components/SwapForm';import{fetchTokenList,fetchTokenBalances,fetchTokenPrices}from'./services/tokenService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// Dark theme configuration for Safe Apps\nconst theme=createTheme({palette:{mode:'dark',primary:{main:'#12FF80'},secondary:{main:'#303030'}}});/**\n * Main App component\n * Manages global state and coordinates between token selection and swap execution\n */const App=()=>{// Safe SDK hooks\nconst{sdk,safe}=useSafeAppsSDK();// Application state\nconst[loading,setLoading]=useState(true);const[tokens,setTokens]=useState([]);const[selectedTokens,setSelectedTokens]=useState([]);const[error,setError]=useState(null);const[apiKey,setApiKey]=useState(null);// Create ethers provider using Safe SDK\nconst provider=useMemo(()=>{const safeProvider=new SafeAppProvider(safe,sdk);return new ethers.BrowserProvider(safeProvider);},[sdk,safe]);/**\n   * Load tokens from OogaBooga API and fetch balances/prices\n   */const loadTokens=useCallback(async()=>{try{setLoading(true);// Fetch token list from API\nconst tokenList=await fetchTokenList(apiKey);// Filter for current chain\nconst filteredTokens=tokenList.tokens.filter(token=>token.chainId===safe.chainId);// Get on-chain balances\nconst tokensWithBalances=await fetchTokenBalances(filteredTokens,safe.safeAddress,provider);// Get current prices\nconst tokensWithPrices=await fetchTokenPrices(tokensWithBalances,apiKey);setTokens(tokensWithPrices);setError(null);}catch(err){setError('Failed to load tokens. Please refresh the page.');console.error(err);}finally{setLoading(false);}},[safe.chainId,safe.safeAddress,provider,apiKey]);// Load tokens when dependencies change\nuseEffect(()=>{loadTokens();},[loadTokens]);/**\n   * Handle token selection from TokenSelector component\n   */const handleTokenSelection=(token,amount,isMax)=>{setSelectedTokens(prev=>{const existingIndex=prev.findIndex(item=>item.token.address===token.address);if(existingIndex>=0){// Update existing token amount\nconst updated=[...prev];updated[existingIndex]={token,amount,isMax};return updated;}else{// Add new token\nreturn[...prev,{token,amount,isMax}];}});};/**\n   * Remove token from selected list\n   */const handleRemoveToken=tokenAddress=>{setSelectedTokens(prev=>prev.filter(item=>item.token.address!==tokenAddress));};/**\n   * Handle swap execution\n   */const handleSwap=async swapBundle=>{if(selectedTokens.length===0){setError('Please select at least one token to swap');return;}if(!apiKey){setError('Please enter your OogaBooga API key to perform swaps');return;}try{setLoading(true);console.log('Swap bundle executed:',swapBundle);// Clear selected tokens after successful swap\nsetSelectedTokens([]);setError(null);// Reload tokens to update balances\nawait loadTokens();}catch(err){console.error('Swap failed:',err);setError(`Failed to execute swap: ${err.message||'Unknown error'}`);}finally{setLoading(false);}};// Show loading spinner\nif(loading){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"100vh\",children:/*#__PURE__*/_jsx(CircularProgress,{})});}return/*#__PURE__*/_jsxs(ThemeProvider,{theme:theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(Container,{maxWidth:\"md\",children:/*#__PURE__*/_jsxs(Box,{my:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",component:\"h1\",gutterBottom:true,children:\"SafeSwap\"}),error&&/*#__PURE__*/_jsx(Typography,{color:\"error\",variant:\"body2\",children:error}),/*#__PURE__*/_jsx(TokenSelector,{tokens:tokens,onSelect:handleTokenSelection,selectedTokens:selectedTokens}),/*#__PURE__*/_jsxs(Box,{mb:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",gutterBottom:true,children:\"OogaBooga API Key\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:apiKey||'',onChange:e=>setApiKey(e.target.value),placeholder:\"Enter your API key\",style:{width:'100%',padding:'10px',borderRadius:'4px',border:'1px solid #444',background:'transparent',color:'white',marginBottom:'10px'}}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"textSecondary\",children:\"Your API key is required for fetching token prices and executing swaps. Keys are not stored.\"})]}),/*#__PURE__*/_jsx(SwapForm,{selectedTokens:selectedTokens,onRemoveToken:handleRemoveToken,onSwap:handleSwap,availableTokens:tokens,apiKey:apiKey})]})})]});};export default App;","map":{"version":3,"names":["React","useEffect","useState","useMemo","useCallback","ThemeProvider","createTheme","CssBaseline","Container","Box","Typography","CircularProgress","useSafeAppsSDK","SafeAppProvider","ethers","TokenSelector","SwapForm","fetchTokenList","fetchTokenBalances","fetchTokenPrices","jsx","_jsx","jsxs","_jsxs","theme","palette","mode","primary","main","secondary","App","sdk","safe","loading","setLoading","tokens","setTokens","selectedTokens","setSelectedTokens","error","setError","apiKey","setApiKey","provider","safeProvider","BrowserProvider","loadTokens","tokenList","filteredTokens","filter","token","chainId","tokensWithBalances","safeAddress","tokensWithPrices","err","console","handleTokenSelection","amount","isMax","prev","existingIndex","findIndex","item","address","updated","handleRemoveToken","tokenAddress","handleSwap","swapBundle","length","log","message","display","justifyContent","alignItems","minHeight","children","maxWidth","my","variant","component","gutterBottom","color","onSelect","mb","type","value","onChange","e","target","placeholder","style","width","padding","borderRadius","border","background","marginBottom","onRemoveToken","onSwap","availableTokens"],"sources":["/home/oliver/Projects/SafeSwap/src/App.tsx"],"sourcesContent":["/**\n * SafeSwap App - Main application component\n * \n * This is a Safe App that allows users to:\n * - Select multiple tokens from their Safe\n * - Bundle swaps into a single transaction\n * - Execute swaps through the Berabundle contract\n */\n\nimport React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { Container, Box, Typography, CircularProgress } from '@mui/material';\nimport { useSafeAppsSDK } from '@safe-global/safe-apps-react-sdk';\nimport { SafeAppProvider } from '@safe-global/safe-apps-provider';\nimport { ethers } from 'ethers';\n\nimport TokenSelector from './components/TokenSelector';\nimport SwapForm from './components/SwapForm';\nimport { fetchTokenList, fetchTokenBalances, fetchTokenPrices } from './services/tokenService';\nimport { Token, TokenAmount, SwapBundle } from './types';\n\n// Dark theme configuration for Safe Apps\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#12FF80',\n    },\n    secondary: {\n      main: '#303030',\n    },\n  },\n});\n\n/**\n * Main App component\n * Manages global state and coordinates between token selection and swap execution\n */\nconst App: React.FC = () => {\n  // Safe SDK hooks\n  const { sdk, safe } = useSafeAppsSDK();\n  \n  // Application state\n  const [loading, setLoading] = useState(true);\n  const [tokens, setTokens] = useState<Token[]>([]);\n  const [selectedTokens, setSelectedTokens] = useState<TokenAmount[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [apiKey, setApiKey] = useState<string | null>(null);\n  \n  // Create ethers provider using Safe SDK\n  const provider = useMemo(() => {\n    const safeProvider = new SafeAppProvider(safe, sdk);\n    return new ethers.BrowserProvider(safeProvider);\n  }, [sdk, safe]);\n\n  /**\n   * Load tokens from OogaBooga API and fetch balances/prices\n   */\n  const loadTokens = useCallback(async () => {\n    try {\n      setLoading(true);\n      \n      // Fetch token list from API\n      const tokenList = await fetchTokenList(apiKey);\n      \n      // Filter for current chain\n      const filteredTokens = tokenList.tokens.filter(\n        token => token.chainId === safe.chainId\n      );\n      \n      // Get on-chain balances\n      const tokensWithBalances = await fetchTokenBalances(\n        filteredTokens, \n        safe.safeAddress, \n        provider\n      );\n      \n      // Get current prices\n      const tokensWithPrices = await fetchTokenPrices(tokensWithBalances, apiKey);\n      \n      setTokens(tokensWithPrices);\n      setError(null);\n    } catch (err) {\n      setError('Failed to load tokens. Please refresh the page.');\n      console.error(err);\n    } finally {\n      setLoading(false);\n    }\n  }, [safe.chainId, safe.safeAddress, provider, apiKey]);\n\n  // Load tokens when dependencies change\n  useEffect(() => {\n    loadTokens();\n  }, [loadTokens]);\n\n  /**\n   * Handle token selection from TokenSelector component\n   */\n  const handleTokenSelection = (token: Token, amount: string, isMax: boolean) => {\n    setSelectedTokens(prev => {\n      const existingIndex = prev.findIndex(item => item.token.address === token.address);\n      \n      if (existingIndex >= 0) {\n        // Update existing token amount\n        const updated = [...prev];\n        updated[existingIndex] = { token, amount, isMax };\n        return updated;\n      } else {\n        // Add new token\n        return [...prev, { token, amount, isMax }];\n      }\n    });\n  };\n\n  /**\n   * Remove token from selected list\n   */\n  const handleRemoveToken = (tokenAddress: string) => {\n    setSelectedTokens(prev => prev.filter(item => item.token.address !== tokenAddress));\n  };\n\n  /**\n   * Handle swap execution\n   */\n  const handleSwap = async (swapBundle: SwapBundle) => {\n    if (selectedTokens.length === 0) {\n      setError('Please select at least one token to swap');\n      return;\n    }\n\n    if (!apiKey) {\n      setError('Please enter your OogaBooga API key to perform swaps');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      console.log('Swap bundle executed:', swapBundle);\n      \n      // Clear selected tokens after successful swap\n      setSelectedTokens([]);\n      setError(null);\n      \n      // Reload tokens to update balances\n      await loadTokens();\n    } catch (err: any) {\n      console.error('Swap failed:', err);\n      setError(`Failed to execute swap: ${err.message || 'Unknown error'}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Show loading spinner\n  if (loading) {\n    return (\n      <Box \n        display=\"flex\" \n        justifyContent=\"center\" \n        alignItems=\"center\" \n        minHeight=\"100vh\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Container maxWidth=\"md\">\n        <Box my={4}>\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n            SafeSwap\n          </Typography>\n          \n          {error && (\n            <Typography color=\"error\" variant=\"body2\">\n              {error}\n            </Typography>\n          )}\n          \n          {/* Token selection component */}\n          <TokenSelector \n            tokens={tokens} \n            onSelect={handleTokenSelection}\n            selectedTokens={selectedTokens}\n          />\n          \n          {/* API key input */}\n          <Box mb={3}>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              OogaBooga API Key\n            </Typography>\n            <input\n              type=\"password\"\n              value={apiKey || ''}\n              onChange={(e) => setApiKey(e.target.value)}\n              placeholder=\"Enter your API key\"\n              style={{\n                width: '100%',\n                padding: '10px',\n                borderRadius: '4px',\n                border: '1px solid #444',\n                background: 'transparent',\n                color: 'white',\n                marginBottom: '10px'\n              }}\n            />\n            <Typography variant=\"caption\" color=\"textSecondary\">\n              Your API key is required for fetching token prices and executing swaps. Keys are not stored.\n            </Typography>\n          </Box>\n          \n          {/* Swap execution component */}\n          <SwapForm\n            selectedTokens={selectedTokens}\n            onRemoveToken={handleRemoveToken}\n            onSwap={handleSwap}\n            availableTokens={tokens}\n            apiKey={apiKey}\n          />\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}